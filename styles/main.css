@font-face {
  font-family: 'NextArt-Bold';
  src: url('../assets/fonts/NEXTART-Bold.woff2') format('woff2');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

@font-face {
    font-family: 'NunitoSans-Regular';
    src: url('../assets/fonts/NunitoSans-Regular.woff2') format('woff2');
    font-weight: 400;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'NunitoSans-ExtraBold';
    src: url('../assets/fonts/NunitoSans-ExtraBold.woff2') format('woff2');
    font-weight: 800;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'NunitoSans-Bold';
    src: url('../assets/fonts/NunitoSans-Bold.woff2') format('woff2');
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'NunitoSans-SemiBold';
    src: url('../assets/fonts/NunitoSans-SemiBold.woff2') format('woff2');
    font-weight: 600;
    font-style: normal;
    font-display: swap;
}

/**
  Нормализация блочной модели
 */
 *,
 ::before,
 ::after {
   box-sizing: border-box;
 }
 
 /**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }
 
 /**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }
 
 /**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
 :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }
 
 /**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
 :where(ul[class]) {
   list-style: none;
 }
 
 :where(address[class]) {
   font-style: normal;
 }
 
 /**
   Обнуляем вертикальные внешние отступы параграфа
  */
 p {
   margin-block: 0;
 } 
 
 /**
   Упрощаем работу с изображениями и видео
  */
 img,
 video {
   display: block;
   max-width: 100%;
   height: auto;
 }
 
 /**
   Наследуем свойства шрифт для полей ввода
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }
 
 html {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   height: 100%;
   /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
   scrollbar-gutter: stable;
 }
 
 /**
   Плавный скролл
  */
 html,
 :has(:target) {
   scroll-behavior: smooth;
 }
 
 body {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   min-height: 100%;
   /**
     Унифицированный интерлиньяж
    */
   line-height: 1.5;
 }
 
 /**
   Нормализация высоты элемента ссылки при его инспектировании в DevTools
  */
 a:where([class]) {
   display: inline-flex;
   color: inherit;
   text-decoration: inherit;
 }
 
 /**
   Курсор-рука при наведении на элемент
  */
 button,
 label {
   cursor: pointer;
 }
 
 /**
   Приводим к единому цвету svg-элементы
   (за исключением тех, у которых уже указан
   атрибут stroke со значением 'none')
  */
 :where([stroke]:not(
   [stroke="none"],
   [stroke^="url"]
 )) {
   stroke: currentColor;
 }
 
 /**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
 svg * {
   transition-property: fill, stroke;
 }
 
 /**
   Приведение рамок таблиц в классический 'collapse' вид
  */
 :where(table) {
   border-collapse: collapse;
   border-color: currentColor;
 }
 
 /**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
 @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 }


:root {
    --color-transparent-white: #ffffff20;
    --color-light: #FDFDFD;
    --color-background-light: #F3F5F4;
    --color-hover-light: #d6d4d4;
    --color-dark: #18121E;
    --color-dark-grin: #1A3E3E;
    --color-hover-gray: #a7a7a7;
    --color-hover-grin: #215746;
    --color-yellow: #F2BE22;

    --border-radius-button: 4px;
    --border-radius-card: 6px;
    --border-radius-input: 8px;

    --border: var(--color-light) solid 1px;

    --header-height: 72px;
    --container-width: 1180px;
    --container-inline-padding: 16px;

    --transition-duration: 0.2s;

    --font-family-base: 'NunitoSans-Regular', sans-serif;
    --font-family-accent: 'NextArt-Bold', sans-serif;
}

.visually-hidden {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    border: 0 !important;
    padding: 0 !important;
    white-space: nowrap !important;
    clip-path: inset(100%) !important;
    clip: rect(0 0 0 0) !important;
    overflow: hidden !important;
}

main section:nth-child(2n) {
  background-color: var(--color-background-light);
}

body {
    font-family: var(--font-family-base);
    font-weight: 400;
    font-size: 14px;
    color: var(--color-dark);
    background-color: #FFFFFF;
}

.container {
    max-width: calc(var(--container-width) + var(--container-inline-padding) * 2);
    padding-inline: var(--container-inline-padding);
    padding-block: 80px 100px;
    margin-inline: auto;
}

.description {
  font-size: clamp(16px, 1.45vw, 18px);
}

.link {
    font-size: clamp(14px, 1.29vw, 16px);
    color: var(--color-light);
    padding: 1em 2.25em;
    background-color: var(--color-dark-grin);
    border-radius: var(--border-radius-button);
    transition-duration: var(--transition-duration);
    transition-property: background-color;

    &:hover {
        background-color: var(--color-hover-grin);
    }
}

.link.link--small {
    padding: 0.75em 1.5em;
}